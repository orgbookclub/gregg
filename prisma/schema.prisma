generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}
type SprintsParticipants {
  didFinish  Boolean @default(false)
  endCount   Int @default(0)
  startCount Int @default(0)
  userId     String
}

type GuildsConfig {
  brForumChannel           String @default("")
  brRequestChannel         String @default("")
  eventAnnouncementChannel String @default("")
  mrForumChannel           String @default("")
  qotdChannel              String @default("")
  qotdSuggestionChannel    String @default("")
  readerRoles              GuildsReaderRoles[]
}

type GuildsReaderRoles {
  points Int    @default(0)
  role   String @default("")
}


model commandUsages {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  
  
  command    String
  subcommand String
  uses       Int
  createdOn  DateTime @db.Date
  updatedOn  DateTime @db.Date
  v          Int?     @map("__v") @ignore


  @@unique([command, subcommand], map: "command_1_subcommand_1")
}

model guilds {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String       @unique(map: "guildId_1")
  name      String       @default("")
  ownerId   String
  region    String
  config    GuildsConfig
  createdAt DateTime     @db.Date
  joinedAt  DateTime     @db.Date
  v         Int?         @map("__v") @ignore

}

model members {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  guildId  String
  joinedAt DateTime @db.Date
  v        Int?     @map("__v") @ignore


  @@unique([guildId, userId], map: "guildId_1_userId_1")
}

model messageCounts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  channelId String
  guildId   String
  count     Int
  createdOn DateTime @db.Date
  updatedOn DateTime @db.Date
  v         Int?     @map("__v") @ignore

  @@unique([guildId, userId, channelId], map: "guildId_1_userId_1_channelId_1")
}

model qotds {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  userId    String
  guildId   String
  status    String
  createdOn DateTime @db.Date
  updatedOn DateTime @db.Date
  v         Int?     @map("__v") @ignore

}

model sprints {
  id           String                @id @default(auto()) @map("_id") @db.ObjectId
  channelId    String
  userId       String
  guildId      String
  duration     Int @default(0)
  participants SprintsParticipants[]
  startedOn    DateTime              @db.Date
  endedOn      DateTime              @db.Date
  status       String
  v            Int?                  @map("__v") @ignore

}

model users {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @unique(map: "userId_1")
  username String
  v        Int?   @map("__v") @ignore

}
